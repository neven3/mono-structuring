{"version":3,"sources":["Pages/HomeScreen/index.jsx","Stores/VehicleModel/ModelListViewStore.js","Common/sortItems.js","Common/getCurrentCards.js","Common/makeInputBlank.js","Stores/VehicleModel/ModelEditViewStore.js","Stores/VehicleModel/ModelAddViewStore.js","Common/mockData.js","Stores/VehicleModel/VehicleModel.js","Stores/VehicleMake/MakeAddViewStore.js","Stores/VehicleMake/MakeEditViewStore.js","Stores/VehicleMake/VehicleMake.js","Stores/RootStore.js","Context/RootStateContext.js","Components/Searchfield/index.jsx","Components/SortButton/index.jsx","Components/SortOption/index.jsx","Components/SortContainer/index.jsx","Components/ListManipulator/index.jsx","Components/EditCardForm/index.jsx","Components/Card/index.jsx","Components/CardList/index.jsx","Components/Pagination/index.jsx","Pages/ListScreen/index.jsx","Components/AddCardForm/index.jsx","Pages/AddScreen/index.jsx","Pages/EditScreen/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","ListViewStore","vehicleModel","sortParams","sortBy","direction","searchText","currentPage","cardsPerPage","setCurrentPage","e","btns","document","querySelectorAll","target","id","forEach","btn","classList","remove","add","changeSearchText","event","value","setSortParams","this","array","sortByKey","cars","slice","sort","a","b","toLowerCase","filter","car","make","includes","model","indexOfLastCard","indexOfFirstCard","getCurrentCards","filteredCars","pageNumbers","i","Math","ceil","length","push","decorate","observable","pageNumbersArray","computed","action","currentCars","makeInputBlank","input","EditViewStore","changeCarSpec","carToChange","setModel","resetModel","onEditFormSubmit","vehicleMakeEditStore","preventDefault","resetMake","cardClicked","toggleCardClicked","AddViewStore","addCar","nanoid","onAddFormSubmit","vehicleMakeStore","addViewStore","mockData","isNew","price","VehicleModel","rootStore","listViewStore","editViewStore","vehicleMake","setMake","VehicleMake","RootStore","RootStateContext","React","createContext","RootStateProvider","children","stores","Provider","useRootStore","useContext","Searchfield","onChange","type","placeholder","defaultValue","SortButton","onClick","SortOption","props","SortContainer","ListManipulator","observer","onSubmit","setCardClicked","htmlFor","name","withRouter","useState","normalCard","location","pathname","map","key","pageNum","index","AddCardForm","AddScreen","Edit","App","exact","path","component","HomeScreen","EditScreen","ListScreen","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a26842eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div className=\"welcome\">\r\n            <h1>Hi, welcome to my test project!</h1>\r\n            <Link to=\"/list\">\r\n                <button className=\"check-app\">Check the app</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import sortItems from '../../Common/sortItems';\r\nimport getCurrentCards from '../../Common/getCurrentCards';\r\nimport { decorate, observable, computed, action } from 'mobx';\r\n\r\nclass ListViewStore {\r\n    sortParams = {\r\n        sortBy: 'make',\r\n        direction: 'ascending',\r\n    };\r\n\r\n    searchText = '';\r\n    currentPage = 1;\r\n    cardsPerPage = 6;\r\n\r\n    setCurrentPage = (e) => {\r\n        const btns = document.querySelectorAll('.page-button');\r\n        this.currentPage = e?.target?.id || 1;\r\n        btns.forEach(btn => btn.classList.remove('active'));\r\n        btns[this.currentPage - 1].classList.add('active');\r\n    };\r\n\r\n    changeSearchText = (event) => {\r\n        this.searchText = event.target.value;\r\n        this.setCurrentPage();\r\n    };\r\n\r\n    setSortParams = (sortBy, direction) => {\r\n        this.sortParams = { sortBy, direction };\r\n        this.setCurrentPage();\r\n    };\r\n\r\n    constructor(vehicleModel) {\r\n        this.vehicleModel = vehicleModel;\r\n    }\r\n\r\n    get filteredCars() {\r\n        const sortedCars = sortItems(this.vehicleModel.cars.slice(), this.sortParams.direction, this.sortParams.sortBy);\r\n\r\n        return sortedCars.filter(car => {\r\n            return (\r\n                car.make.toLowerCase().includes(this.searchText)\r\n                || car.model.toLowerCase().includes(this.searchText)\r\n            );\r\n        });\r\n    }\r\n\r\n    get currentCars() {\r\n        return getCurrentCards(this.filteredCars, this.currentPage, this.cardsPerPage);\r\n    }\r\n\r\n    get pageNumbersArray() {\r\n        const pageNumbers = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(this.filteredCars.length / this.cardsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        return pageNumbers;\r\n    }\r\n}\r\n\r\ndecorate(ListViewStore, {\r\n    cars: observable,\r\n    searchText: observable,\r\n    sortParams: observable,\r\n    currentPage: observable,\r\n    cardsPerPage: observable,\r\n    pageNumbersArray: computed,\r\n    setCurrentPage: action,\r\n    filteredCars: computed,\r\n    currentCars: computed,\r\n    changeSearchText: action,\r\n    setSortParams: action,\r\n});\r\n\r\nexport default ListViewStore;\r\n","export default function sortItems (array, direction, sortByKey) {\r\n    if (direction === 'ascending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() > b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] > b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    } else if (direction === 'descending') {\r\n        return array.sort((a, b) => {\r\n            if (typeof a[sortByKey] === 'string') {\r\n                return a[sortByKey].toLowerCase() < b[sortByKey].toLowerCase() ? 1 : -1;\r\n            } else {\r\n                return a[sortByKey] < b[sortByKey] ? 1 : -1;\r\n            }\r\n        });\r\n    }\r\n}\r\n","export default function getCurrentCards(array, currentPage, cardsPerPage) {\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = array.slice(indexOfFirstCard, indexOfLastCard);\r\n    return currentCards;\r\n}\r\n","export default function makeInputBlank(input) {\r\n    input.value = '';\r\n}\r\n","import { decorate, action, observable } from \"mobx\";\r\nimport makeInputBlank from '../../Common/makeInputBlank';\r\n\r\nclass EditViewStore {\r\n    // edit\r\n    changeCarSpec = (carToChange, make, model) => {\r\n        carToChange.make = make || carToChange.make;\r\n        carToChange.model = model || carToChange.model;\r\n    };\r\n\r\n    setModel = (model) => {\r\n        this.vehicleModel.model = model;\r\n    };\r\n\r\n    resetModel = () => this.vehicleModel.model = '';\r\n\r\n    onEditFormSubmit = (vehicleMakeEditStore, carToChange, event) => {\r\n        event.preventDefault();\r\n        makeInputBlank(event.target.model);\r\n        makeInputBlank(event.target.make);\r\n        vehicleMakeEditStore.changeCarSpec(carToChange, this.vehicleModel.model);\r\n        vehicleMakeEditStore.resetMake();\r\n        this.resetModel();\r\n    };\r\n\r\n    constructor(vehicleModel) {\r\n        this.vehicleModel = vehicleModel;\r\n    }\r\n}\r\n\r\ndecorate(EditViewStore, {\r\n    changeCarSpec: action,\r\n    cardClicked: observable,\r\n    toggleCardClicked: action,\r\n    setModel: action,\r\n    resetModel: action,\r\n    onEditFormSubmit: action,\r\n});\r\n\r\nexport default EditViewStore;\r\n","import { nanoid } from 'nanoid';\r\nimport { decorate, action } from 'mobx';\r\nimport makeInputBlank from '../../Common/makeInputBlank';\r\n\r\nclass AddViewStore {\r\n    addCar = (make, model) => {\r\n        if (make && model)\r\n            this.vehicleModel.cars.push({ make, model, id: nanoid() });\r\n    };\r\n\r\n    resetModel = () => this.vehicleModel.model = '';\r\n\r\n    setModel = (model) => {\r\n        if (model !== '') {\r\n            this.vehicleModel.model = model;\r\n        }\r\n    };\r\n\r\n    onAddFormSubmit = (vehicleMakeStore, e) => {\r\n        e.preventDefault();\r\n        makeInputBlank(e.target.model);\r\n        makeInputBlank(e.target.make);\r\n        vehicleMakeStore.addViewStore.addCar(this.vehicleModel.model);\r\n        vehicleMakeStore.addViewStore.resetMake();\r\n        this.resetModel();\r\n    };\r\n\r\n    constructor(vehicleModel) {\r\n        this.vehicleModel = vehicleModel;\r\n    }\r\n}\r\n\r\ndecorate(AddViewStore, {\r\n    addCar: action,\r\n    setModel: action,\r\n    resetModel: action,\r\n    onAddFormSubmit: action,\r\n});\r\n\r\nexport default AddViewStore;\r\n","import { nanoid } from 'nanoid';\r\n\r\nconst mockData = [\r\n    {\r\n        make: 'Mini',\r\n        model: 'Cooper JCW GP',\r\n        isNew: true,\r\n        price: 50000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F50',\r\n        isNew: false,\r\n        price: 3000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Subaru',\r\n        model: 'Impreza 22B',\r\n        isNew: false,\r\n        price: 100000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Audi',\r\n        model: 'RSQ8',\r\n        isNew: true,\r\n        price: 140000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Rapide',\r\n        isNew: false,\r\n        price: 60000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Flying Spur',\r\n        isNew: true,\r\n        price: 275000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '935',\r\n        isNew: true,\r\n        price: 1000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Cayenne Turbo S',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Maserati',\r\n        model: 'Coupe',\r\n        isNew: false,\r\n        price: 20000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Fisker',\r\n        model: 'Karma',\r\n        isNew: false,\r\n        price: 40000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: 'F8 Tributo',\r\n        isNew: true,\r\n        price: 300000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'GMC',\r\n        model: 'Sierra 3500HD Denali',\r\n        isNew: true,\r\n        price: 80000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: '570S GT4',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: 'Panamera',\r\n        isNew: false,\r\n        price: 30000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ford',\r\n        model: 'F-650',\r\n        isNew: true,\r\n        price: 150000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Pagani',\r\n        model: 'Zonda',\r\n        isNew: false,\r\n        price: 6000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Mercedes',\r\n        model: 'G63 AMG 6x6',\r\n        isNew: true,\r\n        price: 1500000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Ferrari',\r\n        model: '599 GTO',\r\n        isNew: false,\r\n        price: 550000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Porsche',\r\n        model: '911 Speedster',\r\n        isNew: true,\r\n        price: 300000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Jaguar',\r\n        model: 'XE SV Project',\r\n        isNew: true,\r\n        price: 200000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'GT',\r\n        isNew: true,\r\n        price: 250000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'McLaren',\r\n        model: 'P1',\r\n        isNew: false,\r\n        price: 2000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Lexus',\r\n        model: 'LX5709',\r\n        isNew: true,\r\n        price: 95000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Superleggera',\r\n        isNew: true,\r\n        price: 350000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bentley',\r\n        model: 'Continental GT',\r\n        isNew: true,\r\n        price: 250000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Bugatti',\r\n        model: 'Chiron',\r\n        isNew: false,\r\n        price: 3000000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'BMW',\r\n        model: 'i3',\r\n        isNew: true,\r\n        price: 50000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Kia',\r\n        model: 'K900',\r\n        isNew: true,\r\n        price: 60000,\r\n        id: nanoid(),\r\n    },\r\n    {\r\n        make: 'Aston Martin',\r\n        model: 'Vanquish S Volante',\r\n        isNew: true,\r\n        price: 340000,\r\n        id: nanoid(),\r\n    },\r\n];\r\n\r\nexport default mockData;\r\n","import { decorate, observable } from \"mobx\";\r\nimport ListViewStore from './ModelListViewStore';\r\nimport EditViewStore from './ModelEditViewStore';\r\nimport AddViewStore from './ModelAddViewStore';\r\nimport mockData from '../../Common/mockData';\r\n\r\nclass VehicleModel {\r\n    cars = mockData.slice();\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.listViewStore = new ListViewStore(this);\r\n        this.editViewStore = new EditViewStore(this);\r\n        this.addViewStore = new AddViewStore(this);\r\n        this.model = '';\r\n    }\r\n}\r\n\r\ndecorate(VehicleModel, {\r\n    cars: observable,\r\n    model: observable,\r\n});\r\n\r\nexport default VehicleModel;\r\n","import { decorate, action } from \"mobx\";\r\n\r\nclass AddViewStore {\r\n    addCar = (model) => {\r\n        this.vehicleMake.rootStore.vehicleModel.addViewStore.addCar(this.vehicleMake.make, model);\r\n    };\r\n\r\n    resetMake = () => this.vehicleMake.make = '';\r\n\r\n    setMake = (make) => {\r\n        if (make !== '') {\r\n            this.vehicleMake.make = make;\r\n        }\r\n    };\r\n\r\n    onAddFormSubmit = (e) => {\r\n        this.vehicleMake.rootStore.vehicleModel.addViewStore.onAddFormSubmit(this.vehicleMake, e);\r\n    };\r\n\r\n    constructor(vehicleMake) {\r\n        this.vehicleMake = vehicleMake;\r\n    }\r\n}\r\n\r\ndecorate(AddViewStore, {\r\n    addCar: action,\r\n    resetMake: action,\r\n    setMake: action,\r\n    onAddFormSubmit: action,\r\n});\r\n\r\nexport default AddViewStore;\r\n","import { decorate, action } from \"mobx\";\r\n\r\nclass EditViewStore {\r\n    resetMake = () => this.vehicleMake.make = '';\r\n\r\n    changeCarSpec = (carToChange, model) => {\r\n        this.vehicleMake.rootStore.vehicleModel.editViewStore.changeCarSpec(carToChange, this.vehicleMake.make, model);\r\n    };\r\n\r\n    onEditFormSubmit = (carToChange, event) => {\r\n        event.preventDefault();\r\n        this.vehicleMake.rootStore.vehicleModel.editViewStore.onEditFormSubmit(this.vehicleMake.editViewStore, carToChange, event);\r\n    };\r\n\r\n    setMake = (make) => {\r\n            this.vehicleMake.make = make;\r\n    };\r\n\r\n    constructor(vehicleMake) {\r\n        this.vehicleMake = vehicleMake;\r\n    }\r\n}\r\n\r\ndecorate(EditViewStore, {\r\n    setMake: action,\r\n    resetMake: action,\r\n    onEditFormSubmit: action,\r\n});\r\n\r\nexport default EditViewStore;","import { decorate, observable } from \"mobx\";\r\nimport AddViewStore from \"./MakeAddViewStore\";\r\nimport EditViewStore from \"./MakeEditViewStore\";\r\n\r\nclass VehicleMake {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.addViewStore = new AddViewStore(this);\r\n        this.editViewStore = new EditViewStore(this);\r\n        // this.listViewStore = new ListViewStore(this);\r\n        this.make = '';\r\n    }\r\n}\r\n\r\ndecorate(VehicleMake, {\r\n    make: observable,\r\n});\r\n\r\nexport default VehicleMake;\r\n","import VehicleModel from './VehicleModel/VehicleModel';\r\nimport VehicleMake from './VehicleMake/VehicleMake';\r\n\r\nclass RootStore {\r\n    constructor() {\r\n        this.vehicleMake = new VehicleMake(this);\r\n        this.vehicleModel = new VehicleModel(this);\r\n    }\r\n}\r\n\r\nexport default RootStore;\r\n","import React from 'react';\r\nimport RootStore from '../Stores/RootStore';\r\n\r\nconst RootStateContext = React.createContext(null);\r\n\r\nexport function RootStateProvider({ children }) {\r\n    const stores = new RootStore();\r\n\r\n    return (\r\n        <RootStateContext.Provider value={stores}>\r\n            {children}\r\n        </RootStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useRootStore() {\r\n    return React.useContext(RootStateContext);\r\n}\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction Searchfield() {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel: { listViewStore } } = rootStore;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Find a car</h2>\r\n            <input\r\n                className=\"text-input\"\r\n                onChange={listViewStore.changeSearchText}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                defaultValue={listViewStore.searchText}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchfield;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction SortButton({ sortBy, direction }) {\r\n    const rootStore = useRootStore();\r\n\r\n    return(\r\n        <button\r\n            className=\"sort-button\"\r\n            onClick={() => rootStore.vehicleModel.listViewStore.setSortParams(sortBy, direction)}\r\n        >\r\n            Sort {direction}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SortButton;\r\n","import React from 'react';\r\nimport SortButton from '../SortButton';\r\nimport './styles.css';\r\n\r\nfunction SortOption(props) {\r\n    return (\r\n        <div className=\"sort-option\">\r\n            <h3>Sort by {props.sortBy}</h3>\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"ascending\"\r\n            />\r\n            <SortButton\r\n                sortBy={props.sortBy}\r\n                direction=\"descending\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortOption;\r\n","import React from 'react';\r\nimport SortOption from '../SortOption';\r\n\r\nfunction SortContainer() {\r\n    return (\r\n        <div>\r\n            <SortOption sortBy=\"make\" />\r\n            <SortOption sortBy=\"model\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortContainer;\r\n","import React from 'react';\r\nimport Searchfield from '../Searchfield';\r\nimport SortContainer from '../SortContainer';\r\n\r\nfunction ListManipulator() {\r\n    return (\r\n        <div>\r\n            <Searchfield />\r\n            <SortContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListManipulator;\r\n","import React from 'react';\r\nimport './styles.css'\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction EditCardForm(props) {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel, vehicleMake } = rootStore;\r\n    \r\n    return (\r\n        <div className=\"card-container edit-card\">\r\n            <form\r\n                className=\"add-card-form\"\r\n                onSubmit={(e) => {\r\n                    vehicleMake.editViewStore.onEditFormSubmit(props.car, e);\r\n                    props.setCardClicked(false);\r\n                }}\r\n            >\r\n                <label htmlFor=\"make\">Make:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"make\"\r\n                    name=\"make\"\r\n                    placeholder={props.car.make}\r\n                    onChange={(e) => vehicleMake.editViewStore.setMake(e.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"model\">Model:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    placeholder={props.car.model}\r\n                    id=\"model\"\r\n                    name=\"model\"\r\n                    onChange={(e) => vehicleModel.editViewStore.setModel(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                    className=\"check-app add\"\r\n                    type=\"submit\"\r\n                >\r\n                        Edit car\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(EditCardForm);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EditCardForm from '../EditCardForm';\r\n\r\nfunction Card(props) {\r\n    const [cardClicked, setCardClicked] = React.useState(false);\r\n\r\n    const normalCard = (\r\n        <div \r\n            className=\"card-container\"\r\n            onClick={() => {\r\n                props.location.pathname === '/edit'\r\n                && setCardClicked(true)\r\n            }}\r\n        >\r\n            <h3 className=\"car-make\">{props.car.make}</h3>\r\n            <p>{props.car.model}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cardClicked\r\n                    ? <EditCardForm\r\n                        setCardClicked={setCardClicked}\r\n                        car={props.car}\r\n                    />\r\n                    : normalCard\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(withRouter(Card));\r\n","import React from 'react';\r\nimport Card from '../Card';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\n\r\nfunction CardList() {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel: { listViewStore } } = rootStore;\r\n    \r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n               listViewStore.currentCars.length\r\n                    ? listViewStore.currentCars.map(car => {\r\n                        return (\r\n                            <Card \r\n                                key={car.id}\r\n                                car={car}\r\n                            />\r\n                        );\r\n                    })\r\n                    : <h3>No cars yet, please add some</h3>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(CardList);\r\n","import React from 'react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\nimport './styles.css';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction Pagination() {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel: {listViewStore} } = rootStore;\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                listViewStore.pageNumbersArray.map((pageNum, index) => {\r\n                    return (\r\n                        <button\r\n                            className={`page-button ${listViewStore.currentPage === index + 1 ? 'active' : ''}`}\r\n                            key={pageNum}\r\n                            id={pageNum}\r\n                            onClick={listViewStore.setCurrentPage}\r\n                        >\r\n                            {pageNum}\r\n                        </button>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(Pagination);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ListManipulator from '../../Components/ListManipulator';\r\nimport CardList from '../../Components/CardList';\r\nimport Pagination from '../../Components/Pagination';\r\nimport { observer } from 'mobx-react';\r\n\r\nfunction ListScreen() {\r\n    return (\r\n        <div className=\"Main\">\r\n            <h1>Cars</h1>\r\n            <Link className=\"link edit\" to=\"/edit\">Edit a car</Link>\r\n            <Link className=\"link add\" to=\"/add\">Add a car</Link>\r\n            <ListManipulator />\r\n            <CardList />\r\n            <Pagination />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(ListScreen);\r\n","import React from 'react';\r\nimport { useRootStore } from '../../Context/RootStateContext';\r\nimport './styles.css';\r\n\r\nfunction AddCardForm() {\r\n    const rootStore = useRootStore();\r\n    const { vehicleModel, vehicleMake } = rootStore;\r\n    \r\n    return (\r\n        <div>\r\n            <form\r\n                className=\"add-card-form\"\r\n                onSubmit={vehicleMake.addViewStore.onAddFormSubmit}\r\n            >\r\n                <label htmlFor=\"make\">Make:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"make\"\r\n                    name=\"make\"\r\n                    onChange={(e) => vehicleMake.addViewStore.setMake(e.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"model\">Model:</label>\r\n                <input\r\n                    className=\"text-input\"\r\n                    type=\"text\"\r\n                    id=\"model\"\r\n                    name=\"model\"\r\n                    onChange={(e) => vehicleModel.addViewStore.setModel(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                    className=\"check-app add\"\r\n                    type=\"submit\"\r\n                >\r\n                        Make car\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCardForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AddCardForm from '../../Components/AddCardForm';\r\nimport './styles.css';\r\n\r\nfunction AddScreen() {\r\n    return (\r\n        <div className=\"screen add-screen\">\r\n            <h2>Add a car</h2>\r\n            <h3>Fill the fields to add a new car to the list</h3>\r\n            <Link className=\"link\" to=\"/list\">\r\n                <button className=\"go-back-button\">Go back to list</button>\r\n            </Link>\r\n            <AddCardForm />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddScreen;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport CardList from '../../Components/CardList';\r\n\r\nfunction Edit() {\r\n    return (\r\n        <div className=\"screen\">\r\n            <h2>Edit a card</h2>\r\n            <h3>Click on a card to edit it</h3>\r\n            <Link to=\"/list\">\r\n                <button className=\"go-back-button\">Go back to list</button>\r\n            </Link>\r\n            <CardList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport HomeScreen from './Pages/HomeScreen';\r\nimport ListScreen from './Pages/ListScreen';\r\nimport AddScreen from './Pages/AddScreen';\r\nimport EditScreen from './Pages/EditScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Route exact path=\"/add\" component={AddScreen} />\r\n        <Route exact path=\"/edit\" component={EditScreen} />\r\n        <Route exact path=\"/list\" component={ListScreen} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { RootStateProvider } from './Context/RootStateContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <RootStateProvider>\n      <App />\n    </RootStateProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}